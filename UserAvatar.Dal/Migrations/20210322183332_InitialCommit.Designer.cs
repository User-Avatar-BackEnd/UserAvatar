// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserAvatar.Dal.Context;

namespace UserAvatar.Dal.Migrations
{
    [DbContext(typeof(UserAvatarContext))]
<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
    [Migration("20210322181713_InitialCommit")]
=======
    [Migration("20210322183332_InitialCommit")]
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("UserAvatar.Dal.Entities.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Boards");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Card", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Card", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ColumnId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
=======
                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<int?>("ResponsibleId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("BoardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
=======
                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Event", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Calculated")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventName");

                    b.HasIndex("UserId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Invite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("InvitedId")
                        .HasColumnType("integer");

                    b.Property<int>("InviterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InvitedId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("BoardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("UserId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Rank", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Ranks");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.User", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.User", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Board", b =>
                {
                    b.HasOne("UserAvatar.Dal.Entities.User", "User")
                        .WithMany("Boards")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Card", b =>
                {
                    b.HasOne("UserAvatar.DAL.Entities.Column", "Column")
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Card", b =>
                {
                    b.HasOne("UserAvatar.Dal.Entities.Column", "Column")
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                        .WithMany("Cards")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
                    b.HasOne("UserAvatar.DAL.Entities.User", "Owner")
=======
                    b.HasOne("UserAvatar.Dal.Entities.User", "Owner")
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
                    b.HasOne("UserAvatar.DAL.Entities.User", "Responsible")
=======
                    b.HasOne("UserAvatar.Dal.Entities.User", "Responsible")
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                        .WithMany()
                        .HasForeignKey("ResponsibleId");

                    b.Navigation("Column");

                    b.Navigation("Owner");

                    b.Navigation("Responsible");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Column", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Column", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.HasOne("UserAvatar.Dal.Entities.Board", "Board")
                        .WithMany("Columns")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Comment", b =>
                {
<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
                    b.HasOne("UserAvatar.DAL.Entities.Card", "Card")
=======
                    b.HasOne("UserAvatar.Dal.Entities.Card", "Card")
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserAvatar.Dal.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.History", b =>
                {
                    b.HasOne("UserAvatar.Dal.Entities.Event", "Event")
                        .WithMany("Histories")
                        .HasForeignKey("EventName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserAvatar.Dal.Entities.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Invite", b =>
                {
                    b.HasOne("UserAvatar.Dal.Entities.User", "Invited")
                        .WithMany("Invited")
                        .HasForeignKey("InvitedId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UserAvatar.Dal.Entities.User", "Inviter")
                        .WithMany("Inviter")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Invited");

                    b.Navigation("Inviter");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.Member", b =>
                {
                    b.HasOne("UserAvatar.Dal.Entities.Board", "Board")
                        .WithMany("Members")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserAvatar.Dal.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("User");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Board", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Board", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Navigation("Columns");

                    b.Navigation("Members");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Card", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Card", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Navigation("Comments");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Column", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Column", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Navigation("Cards");
                });

<<<<<<< Updated upstream:UserAvatar.DAL/Migrations/20210322181713_InitialCommit.Designer.cs
            modelBuilder.Entity("UserAvatar.DAL.Entities.Event", b =>
=======
            modelBuilder.Entity("UserAvatar.Dal.Entities.Event", b =>
>>>>>>> Stashed changes:UserAvatar.Dal/Migrations/20210322183332_InitialCommit.Designer.cs
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("UserAvatar.Dal.Entities.User", b =>
                {
                    b.Navigation("Boards");

                    b.Navigation("Comments");

                    b.Navigation("Histories");

                    b.Navigation("Invited");

                    b.Navigation("Inviter");
                });
#pragma warning restore 612, 618
        }
    }
}
